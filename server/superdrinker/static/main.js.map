{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bar-details/bar-details.component.css","webpack:///./src/app/bar-details/bar-details.component.html","webpack:///./src/app/bar-details/bar-details.component.ts","webpack:///./src/app/bars-beers/bars-beers.component.css","webpack:///./src/app/bars-beers/bars-beers.component.html","webpack:///./src/app/bars-beers/bars-beers.component.ts","webpack:///./src/app/bars-drinkers/bars-drinkers.component.css","webpack:///./src/app/bars-drinkers/bars-drinkers.component.html","webpack:///./src/app/bars-drinkers/bars-drinkers.component.ts","webpack:///./src/app/bars-manufs/bars-manufs.component.css","webpack:///./src/app/bars-manufs/bars-manufs.component.html","webpack:///./src/app/bars-manufs/bars-manufs.component.ts","webpack:///./src/app/bars-sell-hour/bars-sell-hour.component.css","webpack:///./src/app/bars-sell-hour/bars-sell-hour.component.html","webpack:///./src/app/bars-sell-hour/bars-sell-hour.component.ts","webpack:///./src/app/bars-sell-weekday/bars-sell-weekday.component.css","webpack:///./src/app/bars-sell-weekday/bars-sell-weekday.component.html","webpack:///./src/app/bars-sell-weekday/bars-sell-weekday.component.ts","webpack:///./src/app/bars.service.ts","webpack:///./src/app/beer-details/beer-details.component.css","webpack:///./src/app/beer-details/beer-details.component.html","webpack:///./src/app/beer-details/beer-details.component.ts","webpack:///./src/app/beers-bars/beers-bars.component.css","webpack:///./src/app/beers-bars/beers-bars.component.html","webpack:///./src/app/beers-bars/beers-bars.component.ts","webpack:///./src/app/beers-drinkers/beers-drinkers.component.css","webpack:///./src/app/beers-drinkers/beers-drinkers.component.html","webpack:///./src/app/beers-drinkers/beers-drinkers.component.ts","webpack:///./src/app/beers-sell-record/beers-sell-record.component.css","webpack:///./src/app/beers-sell-record/beers-sell-record.component.html","webpack:///./src/app/beers-sell-record/beers-sell-record.component.ts","webpack:///./src/app/beers-stats-serv.service.ts","webpack:///./src/app/beers-stats/beers-stats.component.css","webpack:///./src/app/beers-stats/beers-stats.component.html","webpack:///./src/app/beers-stats/beers-stats.component.ts","webpack:///./src/app/beers.service.ts","webpack:///./src/app/beers/beers.component.css","webpack:///./src/app/beers/beers.component.html","webpack:///./src/app/beers/beers.component.ts","webpack:///./src/app/drinker-details/drinker-details.component.css","webpack:///./src/app/drinker-details/drinker-details.component.html","webpack:///./src/app/drinker-details/drinker-details.component.ts","webpack:///./src/app/drinkers-bars/drinkers-bars.component.css","webpack:///./src/app/drinkers-bars/drinkers-bars.component.html","webpack:///./src/app/drinkers-bars/drinkers-bars.component.ts","webpack:///./src/app/drinkers-beers/drinkers-beers.component.css","webpack:///./src/app/drinkers-beers/drinkers-beers.component.html","webpack:///./src/app/drinkers-beers/drinkers-beers.component.ts","webpack:///./src/app/drinkers-month/drinkers-month.component.css","webpack:///./src/app/drinkers-month/drinkers-month.component.html","webpack:///./src/app/drinkers-month/drinkers-month.component.ts","webpack:///./src/app/drinkers-time/drinkers-time.component.css","webpack:///./src/app/drinkers-time/drinkers-time.component.html","webpack:///./src/app/drinkers-time/drinkers-time.component.ts","webpack:///./src/app/drinkers-trans/drinkers-trans.component.css","webpack:///./src/app/drinkers-trans/drinkers-trans.component.html","webpack:///./src/app/drinkers-trans/drinkers-trans.component.ts","webpack:///./src/app/drinkers-week/drinkers-week.component.css","webpack:///./src/app/drinkers-week/drinkers-week.component.html","webpack:///./src/app/drinkers-week/drinkers-week.component.ts","webpack:///./src/app/drinkers.service.ts","webpack:///./src/app/drinkers/drinkers.component.css","webpack:///./src/app/drinkers/drinkers.component.html","webpack:///./src/app/drinkers/drinkers.component.ts","webpack:///./src/app/drinkersbar-details/drinkersbar-details.component.css","webpack:///./src/app/drinkersbar-details/drinkersbar-details.component.html","webpack:///./src/app/drinkersbar-details/drinkersbar-details.component.ts","webpack:///./src/app/drinkersbarlist/drinkersbarlist.component.css","webpack:///./src/app/drinkersbarlist/drinkersbarlist.component.html","webpack:///./src/app/drinkersbarlist/drinkersbarlist.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/insight/insight.component.css","webpack:///./src/app/insight/insight.component.html","webpack:///./src/app/insight/insight.component.ts","webpack:///./src/app/mod-bars/mod-bars.component.css","webpack:///./src/app/mod-bars/mod-bars.component.html","webpack:///./src/app/mod-bars/mod-bars.component.ts","webpack:///./src/app/mod-city/mod-city.component.css","webpack:///./src/app/mod-city/mod-city.component.html","webpack:///./src/app/mod-city/mod-city.component.ts","webpack:///./src/app/mod-drinkers/mod-drinkers.component.css","webpack:///./src/app/mod-drinkers/mod-drinkers.component.html","webpack:///./src/app/mod-drinkers/mod-drinkers.component.ts","webpack:///./src/app/mod-freq/mod-freq.component.css","webpack:///./src/app/mod-freq/mod-freq.component.html","webpack:///./src/app/mod-freq/mod-freq.component.ts","webpack:///./src/app/mod-include/mod-include.component.css","webpack:///./src/app/mod-include/mod-include.component.html","webpack:///./src/app/mod-include/mod-include.component.ts","webpack:///./src/app/mod-item/mod-item.component.css","webpack:///./src/app/mod-item/mod-item.component.html","webpack:///./src/app/mod-item/mod-item.component.ts","webpack:///./src/app/mod-like/mod-like.component.css","webpack:///./src/app/mod-like/mod-like.component.html","webpack:///./src/app/mod-like/mod-like.component.ts","webpack:///./src/app/mod-loc/mod-loc.component.css","webpack:///./src/app/mod-loc/mod-loc.component.html","webpack:///./src/app/mod-loc/mod-loc.component.ts","webpack:///./src/app/mod-mk/mod-mk.component.css","webpack:///./src/app/mod-mk/mod-mk.component.html","webpack:///./src/app/mod-mk/mod-mk.component.ts","webpack:///./src/app/mod-sells/mod-sells.component.css","webpack:///./src/app/mod-sells/mod-sells.component.html","webpack:///./src/app/mod-sells/mod-sells.component.ts","webpack:///./src/app/mod-trans/mod-trans.component.css","webpack:///./src/app/mod-trans/mod-trans.component.html","webpack:///./src/app/mod-trans/mod-trans.component.ts","webpack:///./src/app/modification/modification.component.css","webpack:///./src/app/modification/modification.component.html","webpack:///./src/app/modification/modification.component.ts","webpack:///./src/app/modserv.service.ts","webpack:///./src/app/res-page/res-page.component.css","webpack:///./src/app/res-page/res-page.component.html","webpack:///./src/app/res-page/res-page.component.ts","webpack:///./src/app/sql-page/sql-page.component.css","webpack:///./src/app/sql-page/sql-page.component.html","webpack:///./src/app/sql-page/sql-page.component.ts","webpack:///./src/app/transaction/transaction.component.css","webpack:///./src/app/transaction/transaction.component.html","webpack:///./src/app/transaction/transaction.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\nimport { BeerDetailsComponent } from './beer-details/beer-details.component';\nimport { BeersComponent } from './beers/beers.component';\nimport { InsightComponent } from './insight/insight.component';\nimport {DrinkersComponent} from './drinkers/drinkers.component';\nimport {DrinkerDetailsComponent} from './drinker-details/drinker-details.component';\nimport {BeersStatsComponent} from './beers-stats/beers-stats.component'\nimport {BeersBarsComponent} from './beers-bars/beers-bars.component'\nimport {BeersDrinkersComponent} from './beers-drinkers/beers-drinkers.component'\nimport {BeersSellRecordComponent} from './beers-sell-record/beers-sell-record.component'\nimport {DrinkersBarsComponent} from './drinkers-bars/drinkers-bars.component'\nimport {DrinkersTimeComponent} from './drinkers-time/drinkers-time.component'\nimport {DrinkersBeersComponent} from './drinkers-beers/drinkers-beers.component'\nimport {BarsBeersComponent} from './bars-beers/bars-beers.component'\nimport {BarsDrinkersComponent} from './bars-drinkers/bars-drinkers.component'\nimport {BarsManufsComponent} from './bars-manufs/bars-manufs.component'\nimport {ModificationComponent} from './modification/modification.component'\nimport {DrinkersbarDetailsComponent} from './drinkersbar-details/drinkersbar-details.component'\nimport {DrinkersbarlistComponent} from './drinkersbarlist/drinkersbarlist.component'\nimport {BarsSellHourComponent} from './bars-sell-hour/bars-sell-hour.component'\nimport {BarsSellWeekdayComponent} from './bars-sell-weekday/bars-sell-weekday.component'\nimport {DrinkersMonthComponent} from './drinkers-month/drinkers-month.component'\nimport {DrinkersWeekComponent} from './drinkers-week/drinkers-week.component'\nimport {TransactionComponent} from './transaction/transaction.component'\nimport {ModBarsComponent} from './mod-bars/mod-bars.component'\n\nimport {ModCityComponent} from './mod-city/mod-city.component'\nimport {ModItemComponent} from './mod-item/mod-item.component'\nimport {ModFreqComponent} from './mod-freq/mod-freq.component'\nimport {ModDrinkersComponent} from './mod-drinkers/mod-drinkers.component'\nimport {ModLikeComponent} from './mod-like/mod-like.component'\nimport {ModLocComponent} from './mod-loc/mod-loc.component'\nimport {ModMkComponent} from './mod-mk/mod-mk.component'\nimport {ModSellsComponent} from './mod-sells/mod-sells.component'\nimport {ModIncludeComponent} from './mod-include/mod-include.component'\nimport {ModTransComponent} from './mod-trans/mod-trans.component'\nimport {HomeComponent} from './home/home.component'\n\nimport {SqlPageComponent} from './sql-page/sql-page.component'\nimport {ResPageComponent} from './res-page/res-page.component'\nconst routes: Routes = [\n  {\n    path:'',\n    pathMatch: 'full',\n    redirectTo:'bars'\n  },\n  {\n    path:'static',\n    pathMatch: 'full',\n    redirectTo:'bars'\n  },\n  {\n    path:'sql',\n    pathMatch: 'full',\n    component: SqlPageComponent\n  },\n  {\n    path:'res',\n    pathMatch: 'full',\n    component: ResPageComponent\n  },\n  {\n    path:'bars',\n    pathMatch: 'full',\n    component: WelcomeComponent\n  },\n  {\n    path:'bars/:bar',\n    pathMatch: 'full',\n    component: BarDetailsComponent\n  },\n  {\n    path:'bars/:bar/topbeers',\n    pathMatch: 'full',\n    component: BarsBeersComponent\n  },\n  {\n    path:'bars/:bar/topdrinkers',\n    pathMatch: 'full',\n    component: BarsDrinkersComponent\n  },\n  {\n    path:'bars/:bar/topmanufs',\n    pathMatch: 'full',\n    component: BarsManufsComponent\n  },\n  {\n    path:'bars/:bar/sellhour',\n    pathMatch: 'full',\n    component: BarsSellHourComponent\n  },\n  {\n    path:'bars/:bar/sellweekday',\n    pathMatch: 'full',\n    component: BarsSellWeekdayComponent\n  },\n\n  {\n    path: 'beers',\n    pathMatch: 'full',\n    component: BeersComponent\n  },\n  {\n    path: 'beers/:beer',\n    pathMatch: 'full',\n    component: BeersStatsComponent\n  },  \n  {\n    path: 'beers/:beer/topbars',\n    pathMatch: 'full',\n    component: BeersBarsComponent\n  }, \n  {\n    path: 'beers/:beer/topdrinkers',\n    pathMatch: 'full',\n    component: BeersDrinkersComponent\n  }, \n  {\n    path: 'beers/:beer/sellrecord',\n    pathMatch: 'full',\n    component: BeersSellRecordComponent\n  }, \n  {\n    path: 'drinkers',\n    pathMatch: 'full',\n    component: DrinkersComponent\n  },\n  {\n    path: 'drinkers/:drinker',\n    pathMatch: 'full',\n    component: DrinkerDetailsComponent\n  },\n  {\n    path: 'drinkers/:drinker/topbeers',\n    pathMatch: 'full',\n    component: DrinkersBeersComponent\n  },\n  {\n    path: 'drinkers/:drinker/bar',\n    pathMatch: 'full',\n    component: DrinkersBarsComponent\n  },\n  {\n    path: 'drinkers/:drinker/barlist',//trans\n    pathMatch: 'full',\n    component: DrinkersbarlistComponent\n  },\n  {\n    path: 'drinkers/:drinker/barlist/:bar',//trans\n    pathMatch: 'full',\n    component: DrinkersbarDetailsComponent\n  },\n  {\n    path: 'drinkers/:drinker/barlist/:bar/:transid',//trans\n    pathMatch: 'full',\n    component: TransactionComponent\n  },\n\n  {\n    path: 'drinkers/:drinker/date',\n    pathMatch: 'full',\n    component: DrinkersTimeComponent\n  },\n  {\n    path: 'drinkers/:drinker/week',\n    pathMatch: 'full',\n    component: DrinkersWeekComponent\n  },\n  {\n    path: 'drinkers/:drinker/month',\n    pathMatch: 'full',\n    component: DrinkersMonthComponent\n  },\n  {\n    path: 'mod',\n    pathMatch: 'full',\n    component: ModificationComponent\n  },\n  {\n    path: 'mod/bars',\n    pathMatch: 'full',\n    component: ModBarsComponent\n  },\n  {\n    path: 'mod/drinkers',\n    pathMatch: 'full',\n    component: ModDrinkersComponent\n  },\n  {\n    path: 'mod/city',\n    pathMatch: 'full',\n    component: ModCityComponent\n  },\n  {\n    path: 'mod/freq',\n    pathMatch: 'full',\n    component: ModFreqComponent\n  },\n  {\n    path: 'mod/include',\n    pathMatch: 'full',\n    component: ModIncludeComponent\n  },\n  {\n    path: 'mod/items',\n    pathMatch: 'full',\n    component: ModItemComponent\n  },\n  {\n    path: 'mod/like',\n    pathMatch: 'full',\n    component: ModLikeComponent\n  },\n  {\n    path: 'mod/loc',\n    pathMatch: 'full',\n    component: ModLocComponent\n  },\n  {\n    path: 'mod/make',\n    pathMatch: 'full',\n    component: ModMkComponent\n  },\n  {\n    path: 'mod/sells',\n    pathMatch: 'full',\n    component: ModSellsComponent\n  },\n  {\n    path: 'mod/trans',\n    pathMatch: 'full',\n    component: ModTransComponent\n  },\n  {\n    path: 'insight',\n    pathMatch: 'full',\n    component: InsightComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Bar Beer Drinker</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/beers\\\">Beers</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/bars\\\">Bars</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/drinkers\\\">Drinkers</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/mod\\\">Modification</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/res\\\">Verification Interface</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/sql\\\">Query Interface</a>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BarBeerDrinker-ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\nimport { DropdownModule } from 'primeng/dropdown';\nimport { TableModule } from 'primeng/table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\nimport { BeerDetailsComponent } from './beer-details/beer-details.component';\nimport { BeersComponent } from './beers/beers.component';\nimport { InsightComponent } from './insight/insight.component';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { DrinkerDetailsComponent} from './drinker-details/drinker-details.component';\nimport { BeersBarsComponent } from './beers-bars/beers-bars.component';\nimport { BeersStatsComponent } from './beers-stats/beers-stats.component';\nimport { BeersDrinkersComponent } from './beers-drinkers/beers-drinkers.component';\nimport { BeersSellRecordComponent } from './beers-sell-record/beers-sell-record.component';\nimport { DrinkersComponent } from './drinkers/drinkers.component';\nimport { DrinkersBarsComponent } from './drinkers-bars/drinkers-bars.component';\nimport { DrinkersTimeComponent } from './drinkers-time/drinkers-time.component';\nimport { DrinkersBeersComponent } from './drinkers-beers/drinkers-beers.component';\nimport { DrinkersTransComponent } from './drinkers-trans/drinkers-trans.component';\nimport { BarsDrinkersComponent } from './bars-drinkers/bars-drinkers.component';\nimport { BarsBeersComponent } from './bars-beers/bars-beers.component';\nimport { BarsManufsComponent } from './bars-manufs/bars-manufs.component';\nimport { ModificationComponent } from './modification/modification.component';\nimport { DrinkersbarDetailsComponent } from './drinkersbar-details/drinkersbar-details.component';\nimport { DrinkersbarlistComponent } from './drinkersbarlist/drinkersbarlist.component';\nimport { BarsSellWeekdayComponent } from './bars-sell-weekday/bars-sell-weekday.component';\nimport { BarsSellHourComponent } from './bars-sell-hour/bars-sell-hour.component';\nimport { DrinkersWeekComponent } from './drinkers-week/drinkers-week.component';\nimport { DrinkersMonthComponent } from './drinkers-month/drinkers-month.component';\nimport { ModBarsComponent } from './mod-bars/mod-bars.component';\nimport { ModDrinkersComponent } from './mod-drinkers/mod-drinkers.component';\nimport { ModCityComponent } from './mod-city/mod-city.component';\nimport { ModFreqComponent } from './mod-freq/mod-freq.component';\nimport { ModIncludeComponent } from './mod-include/mod-include.component';\nimport { ModItemComponent } from './mod-item/mod-item.component';\nimport { ModLikeComponent } from './mod-like/mod-like.component';\nimport { ModLocComponent } from './mod-loc/mod-loc.component';\nimport { ModMkComponent } from './mod-mk/mod-mk.component';\nimport { ModSellsComponent } from './mod-sells/mod-sells.component';\nimport { ModTransComponent } from './mod-trans/mod-trans.component';\nimport {MessagesModule} from 'primeng/messages';\nimport {MessageModule} from 'primeng/message';\nimport { HomeComponent } from './home/home.component';\nimport { SqlPageComponent } from './sql-page/sql-page.component';\nimport { ResPageComponent } from './res-page/res-page.component';\n//import {ToastModule} from 'primeng/toast';\n//import {ToastModule} from 'ng2-toastr/ng2-toastr'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    BarDetailsComponent,\n    BeerDetailsComponent,\n    BeersComponent,\n    InsightComponent,\n    TransactionComponent,\n    DrinkerDetailsComponent,\n    BeersBarsComponent,\n    BeersStatsComponent,\n    BeersDrinkersComponent,\n    BeersSellRecordComponent,\n    DrinkersComponent,\n    DrinkersBarsComponent,\n    DrinkersTimeComponent,\n    DrinkersBeersComponent,\n    DrinkersTransComponent,\n    BarsDrinkersComponent,\n    BarsBeersComponent,\n    BarsManufsComponent,\n    ModificationComponent,\n    DrinkersbarDetailsComponent,\n    DrinkersbarlistComponent,\n    BarsSellWeekdayComponent,\n    BarsSellHourComponent,\n    DrinkersWeekComponent,\n    DrinkersMonthComponent,\n    ModBarsComponent,\n    ModDrinkersComponent,\n    ModCityComponent,\n    ModFreqComponent,\n    ModIncludeComponent,\n    ModItemComponent,\n    ModLikeComponent,\n    ModLocComponent,\n    ModMkComponent,\n    ModSellsComponent,\n    ModTransComponent,\n    HomeComponent,\n    SqlPageComponent,\n    ResPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    DropdownModule,\n    TableModule,\n    AppRoutingModule,\n    MessageModule,\n    MessagesModule,\n    //ToastModule\n  ],\n  providers: [HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhci1kZXRhaWxzL2Jhci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">{{ barName}}</h1>\\n      <p class=\\\"bar-details\\\" *ngIf=\\\"barDetails\\\">\\n          {{ barDetails?.addr }} <span *ngIf=\\\"barDetails.addr && barDetails.city\\\">|</span> {{ barDetails?.city }}\\n          <br>\\n          {{ barDetails?.phone }}\\n      </p>\\n    </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n        <h2 class=\\\"text-center font-weight-light\\\">options</h2>\\n      \\n        <div></div>\\n        <br>\\n        <b>\\n            <a routerLink=\\\"/bars/{{ barName }}/topdrinkers\\\">\\n              Find out the top drinker of {{ barName }}\\n            </a>\\n        </b>\\n        <div></div>\\n        <br>\\n        <b>\\n            <a routerLink=\\\"/bars/{{ barName }}/topbeers/\\\">\\n              Find out the most popular beer\\n            </a>\\n        </b>\\n        <div></div>\\n        <br>\\n        <b>\\n          <a routerLink=\\\"/bars/{{ barName }}/topmanufs/\\\">\\n            Find out the most popular manufacturers\\n          </a>\\n        </b>\\n        <br><br>\\n\\n        <b>\\n                <a routerLink=\\\"/bars/{{ barName }}/sellweekday/\\\">\\n                  Find out  the busiest day of the week\\n                </a>\\n              </b>\\n              <br><br>\\n\\n         <b>\\n          <a routerLink=\\\"/bars/{{ barName }}/sellhour/\\\">\\n            Find out the busiest periods of the day\\n          </a>\\n        </b>\\n        <br><br>\\n\\n\\n<div class=\\\"container\\\">\\n  <h1 class=\\\"text-center font-weight-light\\\">Make Transactions</h1>\\n  <fieldset>\\n      <legend>New Transcation at {{ barName }}:</legend>\\n  <h2 class = \\\"font-weight-light\\\">\\n    Drinker Name\\n  </h2>\\n  <input  #drinkerNameBox type=\\\"text\\\" [(ngModel)]=\\\"drinkerNameValue\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Transcation ID\\n    </h2>\\n  <input  #transIDBox type=\\\"text\\\" [(ngModel)]=\\\"transIDValue\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Tips\\n    </h2>\\n  <input  #tipsBox type=\\\"text\\\" [(ngModel)]=\\\"tipsValue\\\" required>\\n  <br>\\n\\n  <h2 class = \\\"font-weight-light\\\">\\n        Date\\n      </h2>\\n    <input  #dateBox type=\\\"text\\\" [(ngModel)]=\\\"dateValue\\\" required>\\n    <br>\\n\\n    <h2 class = \\\"font-weight-light\\\">\\n            Time\\n          </h2>\\n        <input  #timeBox type=\\\"text\\\" [(ngModel)]=\\\"timeValue\\\" required>\\n        <br>\\n\\n  <button (click)=\\\"makeTrans(drinkerNameValue,transIDValue,tipsValue,dateValue,timeValue)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  <button \\n  (click)=\\\"drinkerNameValue=''\\\" \\n  (click)=\\\"transIDValue=''\\\" \\n  (click)=\\\"tipsValue=''\\\"\\n  (click)=\\\"dateValue=''\\\"\\n  (click)=\\\"timeValue=''\\\"\\n  class=\\\"btn btn-primary\\\">Clear</button>\\n  </fieldset>\\n\\n</div>\\n<!--\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Menu</h2>\\n    <br>\\n    <p-table [value]=\\\"menu\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n            <tr>\\n                <th>Beer</th>\\n                <th>Menufacturer</th>\\n                <th>Price</th>\\n                <th>Likes</th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-item>\\n            <tr>\\n                <td><a routerLink=\\\"/beers/{{ item.beer }}\\\">{{ item.beer }}</a></td>\\n                <td>{{ item.manf }}</td>\\n                <td>{{ item.price | currency }}</td>\\n                <td>{{ item.likes }}</td>\\n            </tr>\\n        </ng-template>\\n    </p-table>\\n</div>\\n\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BarsService, Bar, BarMenuItem,trans_msg } from '../bars.service';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-bar-details',\n  templateUrl: './bar-details.component.html',\n  styleUrls: ['./bar-details.component.css']\n})\nexport class BarDetailsComponent implements OnInit {\n\n  barName: string;\n  barDetails: Bar;\n  menu: BarMenuItem[];\n\n  resp:trans_msg;\n\n  drinkerNameValue = \"Derpy Derpson\"\n  transIDValue = \"1000\" \n  tipsValue = \"0.0\"\n  dateValue= \"1/1/2018\"\n  timeValue= \"00:00\"\n\n\n  constructor(\n    private barService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n\n      barService.getBar(this.barName).subscribe(\n        data => {\n          this.barDetails = data;\n        },\n        (error: HttpResponse<any>) => {\n          if (error.status === 404) {\n            alert('Bar not found');\n          } else {\n            console.error(error.status + ' - ' + error.body);\n            alert('An error occurred on the server. Please check the browser console.');\n          }\n        }\n      );\n\n      barService.getMenu(this.barName).subscribe(\n        data => {\n          this.menu = data;\n        }\n      );\n    });\n  }\n\n  ngOnInit() {\n  }\n  makeTrans(drinkerNameValue:string,\n    transIDValue:string,\n    tipsValue:string,\n    dateValue:string,\n    timeValue:string){\n\n\n    this.barService\n    .make_trans(this.barName,\n      drinkerNameValue,\n      transIDValue,\n      tipsValue,\n      dateValue,\n      timeValue)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.msg.toString())\n        if (this.resp.msg.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.msg.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n  \n    )\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnMtYmVlcnMvYmFycy1iZWVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{barName}}'s most popular beer!</h1>\\n      <p class=\\\"lead\\\">Bar graph for top beers at {{barName}}</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\\n    \"","import { Component, OnInit } from '@angular/core';\nimport {BarsService, Item} from '../bars.service'\nimport {ActivatedRoute} from '@angular/router'\n\ndeclare const Highcharts: any;\n@Component({\n  selector: 'app-bars-beers',\n  templateUrl: './bars-beers.component.html',\n  styleUrls: ['./bars-beers.component.css']\n})\nexport class BarsBeersComponent implements OnInit {\n\n  barName : string; \n  beers : Item[];\n\n  constructor(\n    private barsService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n      this.barsService.bar_top_item(this.barName).subscribe(\n        data=>{\n          //this.beers = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n        data.forEach(Item => {\n          bars.push(Item.Item);\n          counts.push(Item.Amount);\n        });\n\n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.barName + 's selling records of different items'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Items'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Number of sells'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnMtZHJpbmtlcnMvYmFycy1kcmlua2Vycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{barName}}'s top visitor!</h1>\\n      <p class=\\\"lead\\\">Bar graph for top drinkers who are largest spenders</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {BarsService, Drinker} from '../bars.service'\nimport {ActivatedRoute} from '@angular/router'\n\ndeclare const Highcharts: any;\n\n@Component({\n  selector: 'app-bars-drinkers',\n  templateUrl: './bars-drinkers.component.html',\n  styleUrls: ['./bars-drinkers.component.css']\n})\nexport class BarsDrinkersComponent implements OnInit {\n\n  barName : string; \n  drinkers : Drinker[];\n\n  constructor(\n    private barsService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n      this.barsService.bar_top_drinker(this.barName).subscribe(\n        data=>{\n          //this.beers = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n        data.forEach(drinker => {\n          bars.push(drinker.DrinkerName);\n          counts.push(drinker.After_Tips);\n        });\n\n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.barName + '\\'s largerst spenders'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Drinkers'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Amount spent'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnMtbWFudWZzL2JhcnMtbWFudWZzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{barName}}'s top manufacters!</h1>\\n      <p class=\\\"lead\\\">Bar graph for top manufacters</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {BarsService,Manuf} from '../bars.service'\nimport {ActivatedRoute} from '@angular/router'\n\ndeclare const Highcharts: any;\n\n@Component({\n  selector: 'app-bars-manufs',\n  templateUrl: './bars-manufs.component.html',\n  styleUrls: ['./bars-manufs.component.css']\n})\nexport class BarsManufsComponent implements OnInit {\n\n  barName : string; \n  manuf : Manuf[];\n\n  constructor(\n    private barsService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n      this.barsService.bar_top_manf(this.barName).subscribe(\n        data=>{\n          //this.beers = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n        data.forEach(man => {\n          bars.push(man.manf);\n          counts.push(man.Amount);\n        });\n        \n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.barName + '\\'s Best Manufactures'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Manufactures'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Amount sold'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnMtc2VsbC1ob3VyL2JhcnMtc2VsbC1ob3VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{barName}}'s the busiest periods of the day !</h1>\\n      <p class=\\\"lead\\\">A bar graph of {{barName}}'s sales distribution.</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n  <div></div>\\n  <br>\\n  \\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {BarsService,trans_by_time} from '../bars.service'\nimport {ActivatedRoute} from '@angular/router'\n\ndeclare const Highcharts: any;\n@Component({\n  selector: 'app-bars-sell-hour',\n  templateUrl: './bars-sell-hour.component.html',\n  styleUrls: ['./bars-sell-hour.component.css']\n})\nexport class BarsSellHourComponent implements OnInit {\n\n  barName : string; \n  trans : trans_by_time[];\n\n  constructor(\n    private barsService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n\n      this.barsService.bar_by_time(this.barName).subscribe(\n        data=>{\n          //this.trans = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n\n        //TODO:this block\n        \n        data.forEach(tran => {\n          \n          counts.push(parseInt(tran.TransNum));\n          bars.push(tran.Hour);\n         \n        });\n        console.log(counts)\n\n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.barName + '\\'s Sales in hours'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Time'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Amount of Sales'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhcnMtc2VsbC13ZWVrZGF5L2JhcnMtc2VsbC13ZWVrZGF5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{barName}}'s the busiest day of the week!</h1>\\n      <p class=\\\"lead\\\">A bar graph of {{barName}}'s sales distribution.</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n  <div></div>\\n  <br>\\n  \\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {BarsService,trans_by_week} from '../bars.service'\nimport {ActivatedRoute} from '@angular/router'\n\ndeclare const Highcharts: any;\n@Component({\n  selector: 'app-bars-sell-weekday',\n  templateUrl: './bars-sell-weekday.component.html',\n  styleUrls: ['./bars-sell-weekday.component.css']\n})\nexport class BarsSellWeekdayComponent implements OnInit {\n\n  barName : string; \n  manuf : any[];\n\n  constructor(\n    private barsService: BarsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n\n      //TODO: this line\n      this.barsService.bar_by_week(this.barName).subscribe(\n        data=>{\n          //this.beers = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n        //TODO:this block\n        data.forEach(tran => {\n          bars.push(tran.WeekDay);\n          counts.push(parseInt(tran.TransNum));\n        });\n\n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.barName + '\\'s Sales in days'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Days'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Amount of Sales'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nexport interface Bar {\n  name: string;\n  license: string;\n  city: string;\n  phone: string;\n  addr: string;\n}\n\nexport interface BarMenuItem {\n  beer: string;\n  manf: string;\n  price: number;\n  likes: number;\n}\n\nexport interface Drinker{\n  After_Tips: number\n  Before_Tips: number\n  DrinkerName: string\n}\nexport interface Beer {\n  name: string;\n}\n\nexport interface Manuf {\n  Amount: number\n  manf : string\n}\nexport interface Item {\n  Amount : number\n  Item : string\n}\n\nexport interface trans_by_week {\n  TransNum : string\n  WeekDay : number\n}\n\nexport interface trans_by_time{\n  Hour : number\n  TransNum : string\n\n}\n\nexport interface trans_msg{\n    msg : string\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class BarsService {\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  getBars() {\n    return this.http.get<Bar[]>('/api/bar');\n  }\n\n  getBar(bar: string) {\n    return this.http.get<Bar>('/api/bar/' + bar);\n  }\n\n  getMenu(bar: string) {\n    return this.http.get<BarMenuItem[]>('/api/menu/' + bar);\n  }\n\n  getFrequentCounts() {\n    return this.http.get<any[]>('/api/frequents-data');\n  }\n\n  getTopDrinker(){\n    return this.http.get<Drinker[]>('/api/topdrinker');\n  }\n\n  getTopBeer(){\n    return this.http.get<Beer[]>('/api/topbeer');\n  }\n  \n  getTopManuf(){\n    return this.http.get<Beer[]>('/api/topmanuf');\n  }\n  bar_top_drinker(barName:string){\n    return this.http.get<Drinker[]>('/api/bar/' + barName + '/topDrinkers');\n  }\n\n  bar_top_item(barName:string){\n    return this.http.get<Item[]>('/api/bar/' + barName + '/topBeers');\n  }\n\n  bar_top_manf(barName:string){\n    return this.http.get<Manuf[]>('/api/bar/' + barName + '/topManufacture');\n  }\n\n  bar_by_week(barName:string){\n    return this.http.get<trans_by_week[]>('/api/bar/' + barName + '/byWeek');\n  }\n\n  bar_by_time(barName:string){\n    return this.http.get<trans_by_time[]>('/api/bar/' + barName + '/byTime');\n  }\n\n  make_trans(barName:string,\n    drinkerNameValue:string,\n    transIDValue:string,\n    tipsValue:string,\n    dateValue:string,\n    timeValue:string){\n\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'my-auth-token'\n        })\n      };\n      \n    return this.http.post<trans_msg>('/api/bar/' + barName + '/maketrans',{\n      \"Bar\" : barName,\n      \"Drinker\" : drinkerNameValue,\n    \"TransID\": transIDValue,\n    \"Tips\":tipsValue,\n    \"Date\":dateValue,\n    \"Time\":timeValue\n    },httpOptions);\n  }\n}\n","module.exports = \".result-count{\\n    font-size : 1.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmVlci1kZXRhaWxzL2JlZXItZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0NBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYmVlci1kZXRhaWxzL2JlZXItZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlc3VsdC1jb3VudHtcbiAgICBmb250LXNpemUgOiAxLjI1cmVtO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">{{ beerName }}</h1>\\n      <p class=\\\"beer-details\\\" *ngIf=\\\"manufacturer\\\">\\n        Made by <i>{{ manufacturer }}</i>\\n      </p>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n    <br>\\n    <div>\\n      <span class=\\\"font-weight-light result-count\\\">Sold at {{ beerLocations?.length }}</span>\\n      <p-dropdown class=\\\"float-right text-left\\\" *ngIf=\\\"filterOptions\\\" [options]=\\\"filterOptions\\\" (onChange)=\\\"sortBy($event.value)\\\"></p-dropdown>\\n    </div>\\n    <br>\\n    <p-table [value]=\\\"beerLocations\\\" sortMode=\\\"multiple\\\" sortField=\\\"price\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar</th>\\n          <th>\\n            Price\\n          </th>\\n          <th>Customers</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td><a routerLink=\\\"/bars/{{ bar.bar }}\\\">{{ bar.bar }}</a></td>\\n          <td>{{ bar.price | currency }}</td>\\n          <td>{{ bar.customers }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { BeersService, BeerLocation } from '../beers.service';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { SelectItem } from 'primeng/components/common/selectitem';\n\n@Component({\n  selector: 'app-beer-details',\n  templateUrl: './beer-details.component.html',\n  styleUrls: ['./beer-details.component.css']\n})\nexport class BeerDetailsComponent implements OnInit {\n\n  beerName: string;\n  beerLocations: BeerLocation[];\n  manufacturer: string;\n\n  filterOptions: SelectItem[];\n  sortField: string;\n  sortOrder: number;\n\n  constructor(\n    private beerService: BeersService,\n    private route: ActivatedRoute\n  ) \n  {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.beerName = paramMap.get('beer');\n\n      this.beerService.getBarsSelling(this.beerName).subscribe(\n        data => {\n          this.beerLocations = data;\n        }\n      );\n\n      this.beerService.getBeerManufacturers(this.beerName)\n        .subscribe(\n          data => {\n            this.manufacturer = data;\n          }\n        );\n\n      this.filterOptions = [\n        {\n          'label': 'Low price first',\n          'value': 'low price'\n        },\n        {\n          'label': 'High price first',\n          'value': 'high price'\n        },\n        {\n          'label': 'Most frequented first',\n          'value': 'high customer'\n        },\n        {\n          'label': 'Least frequented first',\n          'value': 'low customer'\n        }\n      ];\n\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  sortBy(selectedOption: string) {\n    if (selectedOption === 'low price') {\n      this.beerLocations.sort((a, b) => {\n        return a.price - b.price;\n      });\n    } else if (selectedOption === 'high price') {\n      this.beerLocations.sort((a, b) => {\n        return b.price - a.price;\n      });\n    } else if (selectedOption === 'low customer') {\n      this.beerLocations.sort((a, b) => {\n        return a.customers - b.customers;\n      });\n    } else if (selectedOption === 'high customer') {\n      this.beerLocations.sort((a, b) => {\n        return b.customers - a.customers;\n      });\n    }\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzLWJhcnMvYmVlcnMtYmFycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Bars where {{ beerName }} sells the most!</h1>\\n      <p class=\\\"lead\\\">This page shows bars that sell {{ beerName }} the most</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <h2 class=\\\"text-center font-weight-light\\\">Bars</h2>\\n      <p-table [value]=\\\"topbars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <tr>\\n            <th>BarName</th>\\n            <th>Amount Sold</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-bar>\\n          <tr>\\n            <td>{{ bar.BarName}}</td>\\n            <td>{{ bar.Times }}</td>\\n            \\n          </tr>\\n        </ng-template>\\n      </p-table>\\n      <br><br>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {BeersStatsServService, Bar, Drinker} from '../beers-stats-serv.service'\n\n\n@Component({\n  selector: 'app-beers-bars',\n  templateUrl: './beers-bars.component.html',\n  styleUrls: ['./beers-bars.component.css']\n})\nexport class BeersBarsComponent implements OnInit {\n\n  beerName : string;\n  topbars : Bar[];\n  \n  \n  constructor(\n    private beersStatsServService: BeersStatsServService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.beerName = paramMap.get('beer');\n      this.beersStatsServService.beer_frequent_bar(this.beerName).subscribe(\n        data=>{\n          this.topbars = data;\n        }\n      )\n\n    });\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzLWRyaW5rZXJzL2JlZXJzLWRyaW5rZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Drinkers who like {{ beerName }} the most!</h1>\\n      <p class=\\\"lead\\\">This page shows drinkers who are the biggest consumers of {{ beerName }}</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <h2 class=\\\"text-center font-weight-light\\\">Drinkers</h2>\\n      <p-table [value]=\\\"topdrinkers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <tr>\\n            <th>DrinkerName</th>\\n            <th>Amount Consumed</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-drinker>\\n          <tr>\\n            <td>{{ drinker.DrinkerName}}</td>\\n            <td>{{ drinker.Times }}</td>\\n          </tr>\\n        </ng-template>\\n      </p-table>\\n      <br><br>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {BeersStatsServService, Drinker} from '../beers-stats-serv.service'\n\n\n@Component({\n  selector: 'app-beers-drinkers',\n  templateUrl: './beers-drinkers.component.html',\n  styleUrls: ['./beers-drinkers.component.css']\n})\nexport class BeersDrinkersComponent implements OnInit {\n\n  beerName : string;\n  topdrinkers : Drinker[];\n  \n  \n  constructor(\n    private beersStatsServService: BeersStatsServService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.beerName = paramMap.get('beer');\n\n      this.beersStatsServService.beer_frequent_drinker(this.beerName).subscribe(\n        data=>{\n          this.topdrinkers = data;\n        }\n      )\n\n    });\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzLXNlbGwtcmVjb3JkL2JlZXJzLXNlbGwtcmVjb3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Sell Record of {{ beerName }}</h1>\\n      <p class=\\\"lead\\\">This page shows the time distribution of when {{ beerName }} sells the most</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <h2 class=\\\"text-center font-weight-light\\\">Sells Record</h2>\\n      <p-table [value]=\\\"sellRecord\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n          <tr>\\n            <th>Date Sold</th>\\n            <th>Amount Sold</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-record>\\n          <tr>\\n            <td>{{ record.Date}}</td>\\n            <td>{{ record.Amount }}</td>\\n          </tr>\\n        </ng-template>\\n      </p-table>\\n      <br><br>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {BeersStatsServService, sellRecord } from '../beers-stats-serv.service'\n\n@Component({\n  selector: 'app-beers-sell-record',\n  templateUrl: './beers-sell-record.component.html',\n  styleUrls: ['./beers-sell-record.component.css']\n})\nexport class BeersSellRecordComponent implements OnInit {\n\n  beerName : string;\n  sellRecord : sellRecord[];\n  \n  \n  constructor(\n    private beersStatsServService: BeersStatsServService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.beerName = paramMap.get('beer');\n\n      this.beersStatsServService.beer_sell_record(this.beerName).subscribe(\n        data=>{\n          this.sellRecord = data;\n        }\n      )\n\n    });\n   }\n\n   ngOnInit(){\n\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nexport interface Bar{\n  BarName: string;\n  Times: number;\n}\n\nexport interface Drinker{\n  DrinkerName: string;\n  Times: string;\n}\n\nexport interface sellRecord{\n  \"Amount\": number,\n  \"Date\": String\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeersStatsServService {\n\n  constructor(public http: HttpClient) { }\n\n  beer_frequent_bar(beer: string) {\n    return this.http.get<Bar[]>('/api/beer/' + beer +'/topBars');\n  }\n\n  beer_frequent_drinker(beer: string) {\n    return this.http.get<Drinker[]>('/api/beer/' + beer +'/topDrinkers');\n  }\n\n  beer_sell_record(beer : string){\n    return this.http.get<sellRecord[]>('/api/beer/' + beer +'/sellRecord');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzLXN0YXRzL2JlZXJzLXN0YXRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">{{ beerName }}</h1>\\n      <p class=\\\"beer-details\\\" *ngIf=\\\"manufacturer\\\">\\n        Made by <i>{{ manufacturer }}</i>\\n      </p>\\n    </div>\\n  </div>\\n\\n<div class=\\\"container\\\">\\n  <h2 class=\\\"text-center font-weight-light\\\">options</h2>\\n\\n  <div></div>\\n  <br>\\n  <b>\\n      <a routerLink=\\\"/beers/{{ beerName }}/topbars/\\\">\\n        Find out what bars sell this item\\n      </a>\\n  </b>\\n  <div></div>\\n  <br>\\n  <b>\\n      <a routerLink=\\\"/beers/{{ beerName }}/topdrinkers/\\\">\\n        Find out who also like this item\\n      </a>\\n  </b>\\n  <div></div>\\n  <br>\\n  <b>\\n    <a routerLink=\\\"/beers/{{ beerName }}/sellrecord\\\">\\n      Show sell records\\n    </a>\\n  </b>\\n  <br><br>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {BeersStatsServService, Bar, Drinker} from '../beers-stats-serv.service'\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-beers-stats',\n  templateUrl: './beers-stats.component.html',\n  styleUrls: ['./beers-stats.component.css']\n})\nexport class BeersStatsComponent implements OnInit {\n\n  beerName : string;\n  topbars : Bar[];\n  topdrinkers :Drinker[];\n\n  constructor(\n    private beersStatsServService: BeersStatsServService,\n    private route: ActivatedRoute)\n    {\n      this.route.paramMap.subscribe((paramMap) => {\n        this.beerName = paramMap.get('beer');\n\n  \n      });\n    }\n    \n\n  ngOnInit() {\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface BeerLocation {\n  bar: string;\n  price: number;\n  customers: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeersService {\n\n  constructor(public http: HttpClient) { }\n\n  getBeers() {\n    return this.http.get<any[]>('/api/beer');\n  }\n\n  getBarsSelling(beer: string) {\n    return this.http.get<BeerLocation[]>(`/api/bars-selling/${beer}`);\n  }\n\n  getBeerManufacturers(beer?: string): any {\n    if (beer) {\n      return this.http.get<string>(`/api/beer-manufacturer/${beer}`);\n    }\n    return this.http.get<string[]>('/api/beer-manufacturer');\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzL2JlZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find your favorite beers!</h1>\\n      <p class=\\\"lead\\\">This page can be used to see all the beers in our system or just the ones by your preferred\\n        manufacturer.</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n  \\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Items</h2>\\n    <p-table [value]=\\\"beers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Category</th>\\n          <th>Manufacturer</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-beer>\\n        <tr>\\n          <td><a routerLink=\\\"/beers/{{ beer.Item }}\\\">{{ beer.Item }}</a></td>\\n          <td>{{ beer.category }}</td>\\n          <td>{{ beer.manf }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { BeersService } from '../beers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\n\n@Component({\n  selector: 'app-beers',\n  templateUrl: './beers.component.html',\n  styleUrls: ['./beers.component.css']\n})\nexport class BeersComponent implements OnInit {\n\n  beers: any[];\n  manufacturerOptions: SelectItem[];\n\n  originalBeersList: any[];\n\n  constructor(private beerService: BeersService) {\n    this.beerService.getBeers().subscribe(\n      data => {\n        this.beers = data;\n        this.originalBeersList = data;\n      }\n    );\n\n    /*\n    this.beerService.getBeerManufacturers().subscribe(\n      data => {\n        this.manufacturerOptions = data.map(manf => {\n          return {\n            label: manf,\n            value: manf,\n          };\n        });\n      }\n    );\n    */\n   \n  }\n\n  ngOnInit() {\n  }\n\n  filterBeers(manufacturer: string) {\n    this.beers = this.originalBeersList;\n    if (manufacturer) {\n      this.beers = this.originalBeersList.filter(beer => beer.manf === manufacturer);\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXItZGV0YWlscy9kcmlua2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  drinker-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drinker-details',\n  templateUrl: './drinker-details.component.html',\n  styleUrls: ['./drinker-details.component.css']\n})\nexport class DrinkerDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLWJhcnMvZHJpbmtlcnMtYmFycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find bars which {{ drinkerName }} visited!</h1>\\n      <p class=\\\"lead\\\">{{ drinkerName }}'s spending in different bars</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <!--\\n  <div class=\\\"container\\\">\\n      <br>\\n      <a routerLink=\\\"/drinkers/{{ drinkerName }}/topbeers\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn-primary\\\">Transcation in different dates</button>\\n    </a>\\n    \\n    </div>\\n\\n  -->\\n\\n  \\n \\n    <div class=\\\"container\\\">\\n        <br>\\n    \\n        <div id=\\\"bargraph\\\"></div>\\n      </div>\\n    <!--\\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Bars</h2>\\n    <p-table [value]=\\\"bars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>Spent</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td><a routerLink=\\\"/drinkers/{{ drinkerName }}/bar/{{ bar.BarName }}\\\">{{ bar.BarName }}</a></td>\\n          <td>{{ bar.Spent }}</td>\\n         \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Bar,Drinker, DrinkerBarSpent,DrinkerDateSpent } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\ndeclare const Highcharts :any;\n@Component({\n  selector: 'app-drinkers-bars',\n  templateUrl: './drinkers-bars.component.html',\n  styleUrls: ['./drinkers-bars.component.css']\n})\nexport class DrinkersBarsComponent implements OnInit {\n\n  drinkerName : string; \n  bars : DrinkerBarSpent[];\n\n\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      \n      /*\n      this.drinkersService.drinker_bar_spent(this.drinkerName).subscribe(\n        data => {\n          this.bars= data;\n        }\n      )\n      */\n      \n      \n      this.drinkersService.drinker_bar_spent(this.drinkerName).subscribe(\n        data=>{\n          //this.bars = data;\n          console.log(data);\n\n          const bars = [];\n          const counts = [];\n  \n          data.forEach(bar=> {\n            bars.push(bar.BarName);\n            counts.push(bar.Spent);\n          });\n  \n          this.renderChart(bars, counts);\n\n        }\n      )\n      \n\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.drinkerName + 's purcharse records in different bars'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Bars'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Spending'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLWJlZXJzL2RyaW5rZXJzLWJlZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find {{drinkerName}}'s record of buying beers!</h1>\\n      <p class=\\\"lead\\\">A bar graph of {{drinkerName}}'s beers orders the most.</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n  <div></div>\\n  <br>\\n  \\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Bar,Drinker, DrinkerBarSpent,DrinkerDateSpent, Item } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\ndeclare const Highcharts :any;\n@Component({\n  selector: 'app-drinkers-beers',\n  templateUrl: './drinkers-beers.component.html',\n  styleUrls: ['./drinkers-beers.component.css']\n})\nexport class DrinkersBeersComponent implements OnInit {\n\n  drinkerName : string; \n  beers : Item[];\n\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.drinkersService.drinker_to_item(this.drinkerName).subscribe(\n        data=>{\n          //this.beers = data;\n\n          console.log(data);\n\n        const bars = [];\n        const counts = [];\n\n        data.forEach(Item => {\n          bars.push(Item.Item);\n          counts.push(Item.Num);\n        });\n\n        this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.drinkerName + 's purcharse records of different items'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Items'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Number of purcharse'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLW1vbnRoL2RyaW5rZXJzLW1vbnRoLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find bars which {{ drinkerName }} visited!</h1>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/date\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different dates</a></p>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/week\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different weeks</a></p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Bar,Drinker, DrinkerBarSpent,DrinkerDateSpent, DrinkerMonthSpent } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\ndeclare const Highcharts :any;\n\n@Component({\n  selector: 'app-drinkers-month',\n  templateUrl: './drinkers-month.component.html',\n  styleUrls: ['./drinkers-month.component.css']\n})\nexport class DrinkersMonthComponent implements OnInit {\n\n  drinkerName : string; \n  dates : DrinkerMonthSpent[];\n  temp : any;\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.drinkersService.drinker_month_spent(this.drinkerName).subscribe(\n        data=>{\n          this.dates = data;\n\n          console.log(data);\n\n          const bars = [];\n          const counts = [];\n  \n          data.forEach(date => {\n            bars.push(parseInt(date.Month));\n            counts.push(parseFloat(date.Spent));\n          });\n  \n          this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.drinkerName + 's purcharse records on different months'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Monthes'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Spending'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLXRpbWUvZHJpbmtlcnMtdGltZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find bars which {{ drinkerName }} visited!</h1>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/week\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different weeks</a></p>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/month\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different months</a></p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\\n<!--\\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Bars</h2>\\n    <p-table [value]=\\\"dates\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Date </th>\\n          <th>Spent</th>\\n        \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-date>\\n        <tr>\\n          <td>{{ date.Date }}</td>\\n          <td>{{ date.Spent }}</td>\\n      \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n  -->\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Bar,Drinker, DrinkerBarSpent,DrinkerDateSpent } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\ndeclare const Highcharts :any;\n\n@Component({\n  selector: 'app-drinkers-time',\n  templateUrl: './drinkers-time.component.html',\n  styleUrls: ['./drinkers-time.component.css']\n})\nexport class DrinkersTimeComponent implements OnInit {\n\n  drinkerName : string; \n  dates : DrinkerDateSpent[];\n  temp : any;\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.drinkersService.drinker_date_spent(this.drinkerName).subscribe(\n        data=>{\n          this.dates = data;\n\n          console.log(data);\n\n          const bars = [];\n          const counts = [];\n  \n          data.forEach(date => {\n            bars.push(date.Date);\n            counts.push(date.Spent);\n          });\n  \n          this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n  ngOnInit() {\n  }\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.drinkerName + 's purcharse records on different dates'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Dates'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Spending'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLXRyYW5zL2RyaW5rZXJzLXRyYW5zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  drinkers-trans works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drinkers-trans',\n  templateUrl: './drinkers-trans.component.html',\n  styleUrls: ['./drinkers-trans.component.css']\n})\nexport class DrinkersTransComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzLXdlZWsvZHJpbmtlcnMtd2Vlay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find bars which {{ drinkerName }} visited!</h1>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/time\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different dates</a></p>\\n      <p class=\\\"lead\\\"><a routerLink=\\\"/drinkers/{{ drinkerName }}/month\\\">Click here if you want to see {{ drinkerName }}'s spending activity on different months</a></p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n      <br>\\n      <div id=\\\"bargraph\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Bar,Drinker, DrinkerBarSpent,DrinkerDateSpent, DrinkerWeekSpent } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\nimport {ActivatedRoute} from '@angular/router'\nimport { HttpResponse } from '@angular/common/http';\n\ndeclare const Highcharts :any;\n@Component({\n  selector: 'app-drinkers-week',\n  templateUrl: './drinkers-week.component.html',\n  styleUrls: ['./drinkers-week.component.css']\n})\nexport class DrinkersWeekComponent implements OnInit {\n\n  drinkerName : string; \n  dates : DrinkerWeekSpent[];\n  temp : any;\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.drinkersService.drinker_week_spent(this.drinkerName).subscribe(\n        data=>{\n          this.dates = data;\n\n          console.log(this.dates);\n\n          const bars = [];\n          const counts = [];\n  \n          this.dates.forEach(date => {\n            \n            bars.push(this.weekday(parseInt(date.WeekDay)));\n            counts.push(parseFloat(date.Spent));\n          });\n  \n        \n          this.renderChart(bars, counts);\n        }\n      )\n\n    });\n   }\n\n\n   weekday(i: number){\n    if(i == 0)\n      return 'Sunday';\n      if(i == 1)\n        return 'Monday';\n      if(i == 2)\n        return 'Tuesday';\n      if(i == 3)\n        return 'Wednesday';\n      if(i == 4)\n        return 'Thursday';\n      if(i == 5)\n        return 'Friday';\n      if(i == 6)\n        return 'Saturday';\n      else\n        return 'ERROR';\n      \n   }\n  ngOnInit() {\n  }\n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.drinkerName + 's purcharse records on different weekdays'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Week Days'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Spending'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TransactionComponent } from './transaction/transaction.component';\n\nexport interface Bar{ \n  BarName: string;\n  Open_Time: string;\n  Close_Time: string;\n}\n\nexport interface Drinker{\n  City: string;\n  Name : string;\n  state: string;\n}\n\nexport interface Item{\n  Item: string;\n  Num: number;\n}\n\nexport interface DrinkerBarSpent{\n  BarName: string;\n  Spent: number;\n}\n\nexport interface DrinkerDateSpent{\n  Date: String\n  Spent: number\n}\n\nexport interface DrinkerWeekSpent{\n  Spent: string\n  WeekDay: string\n  \n}\n\nexport interface DrinkerMonthSpent{\n  Month: string\n  Spent: string\n}\n\nexport interface drinker_bar_trans{\n  BarName: string\n  Date: string\n  Time: string\n  TransID: number\n}\n\nexport interface trans_detail{\n  BarName: string\n  Date: string,\n  DrinkerName: string\n  Item: string\n  Price: number\n  Quantity: number\n  Time: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrinkersService {\n\n  constructor(public http: HttpClient) { }\n\nget_drinkers(){\n    return this.http.get<Drinker[]>('/api/drinker');\n }\n\n drinker_to_bar(drinkerName:string){\n   return this.http.get<Bar[]>('/api/drinker/' + drinkerName + '/bar');\n }\n\n drinker_to_item(drinkerName:string){\n  return this.http.get<Item[]>('/api/drinker/'+drinkerName +'/topBeer');\n }\n drinker_bar_spent(drinkerName:string){\n   return this.http.get<DrinkerBarSpent[]>('/api/drinker/' + drinkerName + '/bar');\n }\n \n drinker_date_spent(drinkerName:string){\n   return this.http.get<DrinkerDateSpent[]>('/api/drinker/' + drinkerName + '/date');\n }\n\n drinker_week_spent(drinkerName:string){\n  return this.http.get<DrinkerWeekSpent[]>('/api/drinker/' + drinkerName + '/byWeek');\n}\n\ndrinker_month_spent(drinkerName:string){\n  return this.http.get<DrinkerMonthSpent[]>('/api/drinker/' + drinkerName + '/byMonth');\n}\n\n  drinker_bar_trans(drinkerName:string,barName:string){\n    return this.http.get<drinker_bar_trans[]>('/api/drinker/' + drinkerName + '/bar/' + barName);\n  }\ntrans_detail(transid:string){\n  return this.http.get<trans_detail[]>('/api/trans/'+transid);\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzL2RyaW5rZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find beer lovers!</h1>\\n      <p class=\\\"lead\\\">This page can be used to see all the drinkers in our system.</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n  \\n  \\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Drinkers</h2>\\n    <p-table [value]=\\\"drinkers\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>City</th>\\n          <th>State</th>\\n          <th>Data Option1</th>\\n          <th>Option2</th>\\n          <th>Option3</th>\\n          <th>Option4</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-drinker>\\n        <tr>\\n          <td>{{ drinker.Name }}</td>\\n          <td>{{ drinker.City }}</td>\\n          <td>{{ drinker.State }}</td>\\n          <td><a routerLink=\\\"/drinkers/{{ drinker.Name }}/barlist\\\">Bars visited</a></td>\\n          <td><a routerLink=\\\"/drinkers/{{ drinker.Name }}/topbeers\\\">Favorite Beers</a></td>\\n          <td><a routerLink=\\\"/drinkers/{{ drinker.Name }}/bar\\\">Spending in Bars</a></td>\\n          <td><a routerLink=\\\"/drinkers/{{ drinker.Name }}/date\\\">Spending in dates</a></td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService,Drinker, DrinkerBarSpent,DrinkerDateSpent } from '../drinkers.service';\nimport { SelectItem } from 'primeng/components/common/selectitem';\n\n@Component({\n  selector: 'app-drinkers',\n  templateUrl: './drinkers.component.html',\n  styleUrls: ['./drinkers.component.css']\n})\nexport class DrinkersComponent implements OnInit {\n\n  //drinkerName : string; this.beerName = paramMap.get('beer');\n  drinkers: Drinker[];\n  DrinkerBarSpent: DrinkerBarSpent;\n  DrinkerDateSpent: DrinkerDateSpent;\n\n  originalBeersList: any[];\n\n  constructor(\n    private drinkersService : DrinkersService\n    ) {\n    this.drinkersService.get_drinkers().subscribe(\n      data => {\n        this.drinkers = data\n      }\n    );\n  \n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzYmFyLWRldGFpbHMvZHJpbmtlcnNiYXItZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find time which {{ drinkerName }} visited {{ barName }}!</h1>\\n      <p class=\\\"lead\\\">{{ drinkerName }}'s spending at {{ barName }} in different dates</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <!--\\n  <div class=\\\"container\\\">\\n      <br>\\n      <a routerLink=\\\"/drinkers/{{ drinkerName }}/topbeers\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn-primary\\\">Top Beers</button>\\n    </a>\\n    \\n    </div>\\n\\n    -->\\n    \\n  <!--\\n    <div class=\\\"container\\\">\\n        <br>\\n    \\n        <div id=\\\"bargraph\\\"></div>\\n      </div>\\n      -->\\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">{{barName}}</h2>\\n    <p-table [value]=\\\"trans\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar Name</th>\\n          <th>Date </th>\\n  \\n         \\n          <th>Time</th>\\n          \\n          <th>Transaction ID</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td>{{ bar.BarName }}</td>\\n          <td>{{ bar.Date }}</td>\\n          <td>{{ bar.Time }}</td>\\n          <td><a routerLink=\\\"/drinkers/{{ drinkerName }}/barlist/{{ bar.BarName }}/{{ bar.TransID }}\\\"> {{ bar.TransID }} </a></td>\\n         \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DrinkersService, drinker_bar_trans } from '../drinkers.service';\n\n@Component({\n  selector: 'app-drinkersbar-details',\n  templateUrl: './drinkersbar-details.component.html',\n  styleUrls: ['./drinkersbar-details.component.css']\n})\nexport class DrinkersbarDetailsComponent implements OnInit {\n\n  drinkerName : string; \n  barName :string;\n\n  trans : drinker_bar_trans[]\n\n\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.barName = paramMap.get('bar');\n      \n    });\n\n    //TODO: this line\n    this.drinkersService.drinker_bar_trans(this.drinkerName,this.barName).subscribe(\n      data => {\n        this.trans= data;\n      }\n    )\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzYmFybGlzdC9kcmlua2Vyc2Jhcmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Find bars which {{ drinkerName }} visited!</h1>\\n      <p class=\\\"lead\\\">{{ drinkerName }}'s spending in different bars</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n  <!--\\n  <div class=\\\"container\\\">\\n      <br>\\n      <a routerLink=\\\"/drinkers/{{ drinkerName }}/topbeers\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn-primary\\\">Top Beers</button>\\n    </a>\\n    \\n    </div>\\n\\n    -->\\n    \\n  <!--\\n    <div class=\\\"container\\\">\\n        <br>\\n    \\n        <div id=\\\"bargraph\\\"></div>\\n      </div>\\n      -->\\n  <div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Bars</h2>\\n    <p-table [value]=\\\"bars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>Spent</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td><a routerLink=\\\"/drinkers/{{ drinkerName }}/barlist/{{ bar.BarName }}\\\">{{ bar.BarName }}</a></td>\\n          <td>{{ bar.Spent }}</td>\\n         \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {DrinkersService, DrinkerBarSpent} from '../drinkers.service'\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-drinkersbarlist',\n  templateUrl: './drinkersbarlist.component.html',\n  styleUrls: ['./drinkersbarlist.component.css']\n})\nexport class DrinkersbarlistComponent implements OnInit {\n\n  drinkerName : string; \n  bars : DrinkerBarSpent[];\n  \n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      \n      \n    });\n\n    this.drinkersService.drinker_bar_spent(this.drinkerName).subscribe(\n      data => {\n        this.bars= data;\n      }\n    )\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Welcome to our Bar Beer Drinker!</h1>\\n      <p class=\\\"lead\\\">Spying on all bars, beers and drinkers across the planet.</p>\\n    </div>\\n    <img src=\\\"https://d37219swed47g7.cloudfront.net/media/images/guides/la-bars-where-you-can-actually-meet-people/banners/1531500523.62.jpg\\\" alt=\\\"welcome\\\" style=\\\"width:1200px;height:520px;border:0;\\\" >\\n  \\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luc2lnaHQvaW5zaWdodC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/DataTables/datatables.css\\\">\\n \\n<script type=\\\"text/javascript\\\" charset=\\\"utf8\\\" src=\\\"/DataTables/datatables.js\\\"></script>\\n\\n\\n<div class = \\\"container\\\">\\n  <br>\\n  <div id = \\\"bargraph\\\"></div>\\n</div>\\n<p>dummy code not used</p>\"","import { Component, OnInit } from '@angular/core';\nimport { BarsService } from '../bars.service';\n\ndeclare const Highcharts: any;\n@Component({\n  selector: 'app-insight',\n  templateUrl: './insight.component.html',\n  styleUrls: ['./insight.component.css']\n})\nexport class InsightComponent implements OnInit {\n\n  constructor(private barService: BarsService) {\n    this.barService.getFrequentCounts().subscribe(\n      data=>{\n        console.log(data);\n        const bars = [];\n        const counts = [];\n        data.forEach(\n          bar =>{\n          bars.push(bar.bar);\n          counts.push(bar.frequentCount);\n        });\n\n        this.renderChart(bars,counts);\n      }\n    )\n   }\n\n  ngOnInit() {\n  }\n  \n  renderChart(bars: string[], counts: number[]) {\n    Highcharts.chart('bargraph', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'Frequenting count at bars'\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Bar'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Number of customers'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1iYXJzL21vZC1iYXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Bars Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Bars</h2>\\n    <p-table [value]=\\\"bars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>Openning Time</th>\\n          <th>Closing Time</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td>{{ bar.Name }}</td>\\n          <td>{{ bar.Open_Time }}</td>\\n          <td>{{ bar.Close_Time }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n  <style>\\n      body {\\n          background: #555;\\n      }\\n      \\n      .content {\\n          max-width: 500px;\\n          margin: auto;\\n          background: white;\\n          padding: 10px;\\n      }\\n      </style>\\n<!--\\n<div class=\\\"container\\\">\\n  <h1 class=\\\"text-center font-weight-light\\\">Bars</h1>\\n  <fieldset>\\n      <legend>Insert:</legend>\\n  <h2 class = \\\"font-weight-light\\\">\\n    Bar Name\\n  </h2>\\n  <input  #barNameBoxI type=\\\"text\\\" [(ngModel)]=\\\"barNameValueI\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Bar Opening Time\\n    </h2>\\n  <input  #barOpenTimeBoxI type=\\\"text\\\" [(ngModel)]=\\\"barOpenTimeValueI\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Bar Closing Time\\n    </h2>\\n  <input  #barCloseTimeBoxI type=\\\"text\\\" [(ngModel)]=\\\"barCloseTimeValueI\\\" required>\\n  <br>\\n\\n  <button (click)=\\\"insertBar(barNameBoxI.value,barOpenTimeBoxI.value, barCloseTimeBoxI.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n  <button (click)=\\\"barNameValueI=''\\\" (click)=\\\"barOpenTimeValueI=''\\\" (click)=\\\"barCloseTimeValueI=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n  </fieldset>\\n  \\n  <legend>----------------------------------------------------</legend>\\n\\n\\n  <fieldset>\\n      <legend>Delete:</legend>\\n  <h2 class = \\\"font-weight-light\\\">\\n    Bar Name\\n  </h2>\\n  <input  #barNameBoxD type=\\\"text\\\" [(ngModel)]=\\\"barNameValueD\\\" required>\\n  <br>\\n\\n  <button (click)=\\\"delBar(barNameBoxD.value)\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n  <button (click)=\\\"barNameValueD=''\\\" (click)=\\\"barOpenTimeValueD=''\\\" (click)=\\\"barCloseTimeValueD=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n  </fieldset>\\n\\n  <legend>----------------------------------------------------</legend>\\n\\n  <fieldset>\\n      <legend>Update:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n          Target Bar Name\\n        </h2>\\n        <input  #barNameBoxU type=\\\"text\\\" [(ngModel)]=\\\"barNameValueU\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n    New Bar Name\\n  </h2>\\n  <input  #barNameBoxU_new type=\\\"text\\\" [(ngModel)]=\\\"barNameValueU_new\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Bar Opening Time\\n    </h2>\\n  <input  #barOpenTimeBoxU type=\\\"text\\\" [(ngModel)]=\\\"barOpenTimeValueU\\\" required>\\n  <h2 class = \\\"font-weight-light\\\">\\n      Bar Closing Time\\n    </h2>\\n  <input  #barCloseTimeBoxU type=\\\"text\\\" [(ngModel)]=\\\"barCloseTimeValueU\\\" required>\\n  <br>\\n\\n  <button (click)=\\\"updateBar(barNameBoxU.value,barNameBoxU_new.value,barOpenTimeBoxU.value, barCloseTimeBoxU.value )\\\" class=\\\"btn btn-primary\\\">Update</button>\\n  <button (click)=\\\"barNameValueU=''\\\" (click)=\\\"barNameValueU_new=''\\\" (click)=\\\"barOpenTimeValueU=''\\\" (click)=\\\"barCloseTimeValueU=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n  </fieldset>\\n\\n</div>\\n\\n-->\\n\\n<div class=\\\"container\\\">\\n    <h1 class=\\\"text-center font-weight-light\\\">Bars</h1>\\n    <fieldset>\\n        <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n    <h2 class = \\\"font-weight-light\\\">\\n      Query:\\n    </h2>\\n   <!-- <input  #queryBox type=\\\"text\\\" [(ngModel)]=\\\"inputQuery\\\" required> -->\\n    <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n    </textarea>\\n    <br>\\n  \\n    <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n    </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport {ModservService} from '../modserv.service';\nimport {BarsService,Bar} from '../bars.service'\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n\n@Component({\n  selector: 'app-mod-bars',\n  templateUrl: './mod-bars.component.html',\n  styleUrls: ['./mod-bars.component.css']\n})\nexport class ModBarsComponent implements OnInit {\n\n  bars : any[]\n  constructor(\n    private barsService: BarsService,\n    private modservService: ModservService,\n    private route : ActivatedRoute,\n    //private messageService : MessageService\n  ) {\n\n    this.barsService.getBars().subscribe(\n      data => {\n        this.bars= data;\n\n        console.log(this.bars)\n      }\n    )\n  }\n\n  ngOnInit() {\n  }\n\n  \n  insertBar(barName: string,openTime :string,closeTime: string) : boolean{\n\n\n    console.log(barName,openTime,closeTime)\n    /*\n    this.modservService\n    .post_hello(value)\n    .subscribe(\n      data => {\n        this.derp = data\n        console.log(this.derp);\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n      \n    )\n      */\n\n      return false;\n  }\n\n  delBar(barName: string) : boolean{\n    console.log(barName)\n    return false\n  }\n\n  updateBar(oldbarName: string,newbarName: string,openTime :string,closeTime: string) : boolean{\n    console.log(oldbarName,newbarName,openTime,closeTime);\n    return false;\n  }\n\n  resp :any;\n  accpet: boolean;\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1jaXR5L21vZC1jaXR5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Citys Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Citys</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          \\n          <th>City</th>\\n          <th>State</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n        \\n          <td>{{ data.City }}</td>\\n          <td>{{ data.State }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Citys</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n     <!-- <input  #queryBox type=\\\"text\\\" [(ngModel)]=\\\"inputQuery\\\" required> -->\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n      </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport {ModservService} from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n\n@Component({\n  selector: 'app-mod-city',\n  templateUrl: './mod-city.component.html',\n  styleUrls: ['./mod-city.component.css']\n})\nexport class ModCityComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    //private messageService : MessageService\n\n    ) { \n\n      //TODO: get city info\n      this.modservService.get_city().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1kcmlua2Vycy9tb2QtZHJpbmtlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Drinkers Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Drinkers</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Drinker </th>\\n          <th>City</th>\\n          <th>State</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Name }}</td>\\n          <td>{{ data.City }}</td>\\n          <td>{{ data.State }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Drinkers</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ModservService} from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport {DrinkersService} from '../drinkers.service'\nimport { HttpResponse } from '@angular/common/http';\n\n\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-drinkers',\n  templateUrl: './mod-drinkers.component.html',\n  styleUrls: ['./mod-drinkers.component.css']\n})\nexport class ModDrinkersComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n   constructor(\n    private drinkersService: DrinkersService,\n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    \n  ) {\n\n    this.drinkersService.get_drinkers().subscribe(\n      data => {\n        this.datas= data;\n\n        console.log(data)\n      }\n    )\n  }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1mcmVxL21vZC1mcmVxLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Frequent Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Frequent</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Drinker </th>\\n          <th>Bar</th>\\n          \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Drinker }}</td>\\n          <td>{{ data.Bar }}</td>\\n          \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Frequent</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n\n@Component({\n  selector: 'app-mod-freq',\n  templateUrl: './mod-freq.component.html',\n  styleUrls: ['./mod-freq.component.css']\n})\nexport class ModFreqComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n   \n    ) { \n\n      //TODO: get city info\n      this.modservService.get_freq().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1pbmNsdWRlL21vZC1pbmNsdWRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Include Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Include</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Trans ID</th>\\n          <th>Item</th>\\n          <th>Price</th>\\n          <th>Quantity</th>\\n          \\n          \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.TransID }}</td>\\n          <td>{{ data.Item }}</td>\\n          <td>{{ data.Price }}</td>\\n          <td>{{ data.Quantity }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Include</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n\n@Component({\n  selector: 'app-mod-include',\n  templateUrl: './mod-include.component.html',\n  styleUrls: ['./mod-include.component.css']\n})\nexport class ModIncludeComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    //private messageService : MessageService\n    \n    ) { \n\n      //TODO: get city info\n      this.modservService.get_include().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1pdGVtL21vZC1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Items Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Items</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Item </th>\\n          <th>Category</th>\\n          <th>Manf</th>\\n          \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Item }}</td>\\n          <td>{{ data.category }}</td>\\n          <td>{{ data.manf}}</td>\\n         \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Items</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\"  cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModservService } from '../modserv.service';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\nimport {BeersService} from '../beers.service'\n\n@Component({\n  selector: 'app-mod-item',\n  templateUrl: './mod-item.component.html',\n  styleUrls: ['./mod-item.component.css']\n})\nexport class ModItemComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    private beersService:BeersService\n    //private messageService : MessageService\n    \n    ) { \n\n      //TODO: get items info\n      this.beersService.getBeers().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1saWtlL21vZC1saWtlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Like Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Like</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Drinker </th>\\n          <th>Item</th>\\n          \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Drinker }}</td>\\n          <td>{{ data.Item }}</td>\\n         \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Like</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-like',\n  templateUrl: './mod-like.component.html',\n  styleUrls: ['./mod-like.component.css']\n})\nexport class ModLikeComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    //private messageService : MessageService\n    \n    ) { \n\n      //TODO: get likes info\n      this.modservService.get_like().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1sb2MvbW9kLWxvYy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Location Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Location</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>City</th>\\n          <th>State</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Bar }}</td>\\n          <td>{{ data.City }}</td>\\n          <td>{{ data.State }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Location</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModservService } from '../modserv.service';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-loc',\n  templateUrl: './mod-loc.component.html',\n  styleUrls: ['./mod-loc.component.css']\n})\nexport class ModLocComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    //private messageService : MessageService\n    \n    ) { \n\n      //TODO: get location info\n      this.modservService.get_loc().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1tay9tb2QtbWsuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Make Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Make</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>TransID </th>\\n          <th>Drinker Name</th>\\n          <th>Bar Name</th>\\n          <th>Date</th>\\n          <th>Time</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.TransID }}</td>\\n          <td>{{ data.DrinkerName }}</td>\\n          <td>{{ data.BarName }}</td>\\n          <td>{{ data.Date }}</td>\\n          <td>{{ data.Time }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Make</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModservService } from '../modserv.service';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-mk',\n  templateUrl: './mod-mk.component.html',\n  styleUrls: ['./mod-mk.component.css']\n})\nexport class ModMkComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n   // private messageService : MessageService\n    \n    ) { \n\n      //TODO: get make info\n      this.modservService.get_make().subscribe(\n        data => {\n          this.datas= data;\n      \n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n    //present err here\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC1zZWxscy9tb2Qtc2VsbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Sells Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Sells</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>Item</th>\\n          <th>Price</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.Bar }}</td>\\n          <td>{{ data.Item }}</td>\\n          <td>{{ data.Price }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Sells</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox cols = \\\"100\\\" rows=\\\"4\\\" type=\\\"text\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-sells',\n  templateUrl: './mod-sells.component.html',\n  styleUrls: ['./mod-sells.component.css']\n})\nexport class ModSellsComponent implements OnInit {\n\n  datas : any[]\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n    //private messageService : MessageService\n    ) { \n\n      //TODO: get sells info\n      this.modservService.get_sell().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n\n  resp :any;\n  accpet: boolean;\n  exe_sql(qry: string){\n    this.modservService\n  \n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZC10cmFucy9tb2QtdHJhbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Insert/Delete/Update Transaction Table!</h1>\\n      <p class=\\\"lead\\\">Click different buttons for different operations</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Transaction</h2>\\n    <p-table [value]=\\\"datas\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>ID </th>\\n          <th>City</th>\\n          \\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\n        <tr>\\n          <td>{{ data.ID }}</td>\\n          <td>{{ data.Tips }}</td>\\n          \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\\n\\n\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"text-center font-weight-light\\\">Transaction</h1>\\n      <fieldset>\\n          <legend>Please Enter MySql command to Insert/Delete/Update this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox cols = \\\"100\\\" rows=\\\"4\\\" type=\\\"text\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\\n<!--\\n      <head>\\n          <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n      <style>\\n          .alert {\\n              padding: 20px;\\n              background-color: #f44336;\\n              color: white;\\n              opacity: 1;\\n              transition: opacity 0.6s;\\n              margin-bottom: 15px;\\n          }\\n          \\n          .alert.success {background-color: #4CAF50;}\\n          .alert.info {background-color: #2196F3;}\\n          .alert.warning {background-color: #ff9800;}\\n          \\n          .closebtn {\\n              margin-left: 15px;\\n              color: white;\\n              font-weight: bold;\\n              float: right;\\n              font-size: 22px;\\n              line-height: 20px;\\n              cursor: pointer;\\n              transition: 0.3s;\\n          }\\n          \\n          .closebtn:hover {\\n              color: black;\\n          }\\n          </style>\\n          </head>\\n          <body>\\n          \\n          <h2>Alert Messages</h2>\\n          <p>Click on the \\\"x\\\" symbol to close the alert message.</p>\\n          <div class=\\\"alert\\\">\\n            <span class=\\\"closebtn\\\">&times;</span>  \\n            <strong>Danger!</strong> Indicates a dangerous or potentially negative action.\\n          </div>\\n          \\n          <div class=\\\"alert success\\\">\\n            <span class=\\\"closebtn\\\">&times;</span>  \\n            <strong>Success!</strong> Indicates a successful or positive action.\\n          </div>\\n          \\n          <div class=\\\"alert info\\\">\\n            <span class=\\\"closebtn\\\">&times;</span>  \\n            <strong>Info!</strong> Indicates a neutral informative change or action.\\n          </div>\\n          \\n          <div class=\\\"alert warning\\\">\\n            <span class=\\\"closebtn\\\">&times;</span>  \\n            <strong>Warning!</strong> Indicates a warning that might need attention.\\n          </div>\\n          \\n          <script>\\n          var close = document.getElementsByClassName(\\\"closebtn\\\");\\n          var i;\\n          \\n          for (i = 0; i < close.length; i++) {\\n              close[i].onclick = function(){\\n                  var div = this.parentElement;\\n                  div.style.opacity = \\\"0\\\";\\n                  setTimeout(function(){ div.style.display = \\\"none\\\"; }, 600);\\n              }\\n          }\\n          </script>\\n        -->\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService, accept } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-mod-trans',\n  templateUrl: './mod-trans.component.html',\n  styleUrls: ['./mod-trans.component.css']\n})\nexport class ModTransComponent implements OnInit {\n\n  datas : any[]\n  resp : accept;\n  accpet: boolean;\n  inputQuery = \"insert into Bar(Name, Open_Time, Close_Time) values('barname', '9:00', '23:00')\"\n \n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n   // private messageService : MessageService\n    \n    ) { \n\n      //TODO: get trans info\n      this.modservService.get_trans().subscribe(\n        data => {\n          this.datas= data;\n  \n          console.log(data)\n        }\n      )\n\n    }\n\n  ngOnInit() {\n  }\n\n  exe_sql(qry: string){\n    this.modservService\n    .make_qry(qry)\n    .subscribe(\n      data => {\n        this.resp = data\n        console.log(this.resp.accept.toString())\n        if (this.resp.accept.toString() ==  \"Success\"){\n          alert( 'Success!');\n        }else{\n          alert( this.resp.accept.toString());\n        }\n        this.resp = null;\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n  \n    )\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGlmaWNhdGlvbi9tb2RpZmljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Modification page</h1>\\n      <p class=\\\"lead\\\">This page allows you to modify all tables</p>\\n      <p-dropdown *ngIf=\\\"manufacturerOptions\\\" [ngClass]=\\\"{ 'no-option-selected': selectedManufacturer === undefined || selectedManufacturer === null }\\\"\\n        placeholder=\\\"Filter by manufacturer\\\" [options]=\\\"manufacturerOptions\\\" [(ngModel)]=\\\"selectedManufacturer\\\" showClear=\\\"true\\\"\\n        (onChange)=\\\"filterBeers($event.value)\\\"></p-dropdown>\\n    </div>\\n  </div>\\n  <br>\\n\\n\\n  <div class=\\\"container\\\">\\n    \\n      <h2 class=\\\"text-center font-weight-light\\\">options</h2>\\n    \\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/bars\\\">\\n            View/Edit data of Bars table.\\n          </a>\\n      </b>\\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/drinkers\\\">\\n            View/Edit data of Drinkers table.\\n          </a>\\n      </b>\\n      <div></div>\\n      <br>\\n      <b>\\n        <a routerLink=\\\"/mod/items\\\">\\n          View/Edit data of Items table.\\n        </a>\\n      </b>\\n\\n      <div></div>\\n      <br>\\n      <b>\\n        <a routerLink=\\\"/mod/freq\\\">\\n          View/Edit data of Frequent table.\\n        </a>\\n      </b>\\n\\n      <div></div>\\n      <br>\\n      <b>\\n        <a routerLink=\\\"/mod/loc\\\">\\n          View/Edit data of Locate table.\\n        </a>\\n      </b>\\n\\n      <div></div>\\n      <br>\\n      <b>\\n        <a routerLink=\\\"/mod/sells\\\">\\n          View/Edit data of sells table.\\n        </a>\\n      </b>\\n\\n      <div></div>\\n      <br>\\n      <b>\\n        <a routerLink=\\\"/mod/city\\\">\\n          View/Edit data of City table.\\n        </a>\\n      </b>\\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/include\\\">\\n            View/Edit data of Include table.\\n          </a>\\n      </b>\\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/like\\\">\\n            View/Edit data of Like table.\\n          </a>\\n      </b>\\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/make\\\">\\n            View/Edit data of Make table.\\n          </a>\\n      </b>\\n      \\n      <div></div>\\n      <br>\\n      <b>\\n          <a routerLink=\\\"/mod/trans\\\">\\n            View/Edit data of Transcations table.\\n          </a>\\n      </b>\\n      <br><br>\\n\\n      \\n    </div>\\n\\n  <!--\\n  <h1>Text ({{textValue}})</h1>\\n  <input #textbox type=\\\"text\\\" [(ngModel)]=\\\"textValue\\\" required>\\n  <button (click)=\\\"logText(textbox.value)\\\">Update Log</button>\\n  <button (click)=\\\"textValue=''\\\">Clear</button>\\n-->\\n<!--\\n  <h2>Template Reference Variable</h2>\\n  Type: '{{textbox.type}}', required: '{{textbox.hasAttribute('required')}}',\\n  upper: '{{textbox.value.toUpperCase()}}'\\n\\n  <h2>Log <button (click)=\\\"log=''\\\">Clear</button></h2>\\n  <pre>{{log}}</pre>\\n-->\\n<!--\\n<h1>Bars</h1>\\n    <input #barBox type=\\\"text\\\" [(ngModel)]=\\\"barValue\\\" required>\\n    <button (click)=\\\"barLogText(barBox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"barValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n\\n<h1>Drinkers</h1>\\n    <input #drinkerBox type=\\\"text\\\" [(ngModel)]=\\\"drinkerValue\\\" required>\\n    <button (click)=\\\"drinkerInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"drinkerValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>  \\n\\n<h1>Items</h1>\\n    <input #itemBox type=\\\"text\\\" [(ngModel)]=\\\"itemValue\\\" required>\\n    <button (click)=\\\"itemInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"itemValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>  \\n  \\n    \\n<h1>Include</h1>\\n    <input #includeBox type=\\\"text\\\" [(ngModel)]=\\\"includeValue\\\" required>\\n    <button (click)=\\\"includeInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"includeValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>    \\n\\n<h1>Like</h1>\\n    <input #likeBox type=\\\"text\\\" [(ngModel)]=\\\"likeValue\\\" required>\\n    <button (click)=\\\"likeInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"likeValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n  \\n<h1>Make</h1>\\n    <input #makeBox type=\\\"text\\\" [(ngModel)]=\\\"makeValue\\\" required>\\n    <button (click)=\\\"makeInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"makeValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n\\n<h1>Transcation</h1>\\n    <input #transcationBox type=\\\"text\\\" [(ngModel)]=\\\"transcationValue\\\" required>\\n    <button (click)=\\\"transcationInsert(barbox.value)\\\" class=\\\"btn btn-primary\\\">Insert</button>\\n    <button (click)=\\\"transcationValue=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n   -->\\n    <!--\\n    <form>\\n    \\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">Bars</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname0\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of bars</small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Drinkers</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname1\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n        <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of drinkers</small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Includes</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname2\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of includes</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Items</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname3\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n            <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of items</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleInputEmail1\\\">Likes</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname4\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n              <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of likss</small>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Makes</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname5\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n                <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of makes</small>\\n              </div>\\n    \\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"exampleInputEmail1\\\">Transcations</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"fname6\\\" value = \\\"test\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n                  <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A list of transcations</small>\\n                </div>\\n               -->\\n\\n   <!--  <div class=\\\"form-group form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\">\\n     <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Check me out</label> \\n    </div>-->\\n<!--  \\n    <button onclick=\\\"myFunction()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n-->\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ModservService, Derp} from \"../modserv.service\"\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modification',\n  templateUrl: './modification.component.html',\n  styleUrls: ['./modification.component.css']\n})\n\n\nexport class ModificationComponent implements OnInit {\n\n  derp: Derp\n  lname:string\n  fname:string\n\n  \n  /*\n  textValue = 'initial value';\n  log = '';\n\n  logText(value: string): void {\n    this.log += `Text changed to '${value}'\\n`;\n  }\n*/\n\n  //barValue = 'initial value';\n  barValue = 'initial value';\n  drinkerValue = 'initial value';\n  itemValue = 'initial value';\n  likeValue = 'initial value';\n  includeValue = 'initial value';\n  makeValue = 'initial value';\n  transcationValue = 'initial value';\n\n  constructor(\n    private modservService :ModservService,\n    private route: ActivatedRoute\n  ) { \n\n    \n\n    this.fname = 'derp';\n    \n  \n  }\n\n  barLogText(value: string) : void{\n\n\n    this.modservService\n    .post_hello(value)\n    .subscribe(\n      data => {\n        this.derp = data\n        console.log(this.derp);\n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n      \n    )\n  \n  }\n  \n  ngOnInit() {\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\nexport interface Derp{\n  sent: String\n}\n\nexport interface accept{\n  accept: String\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModservService {\n\n  \n  constructor(public http: HttpClient) { \n    \n  }\n\n  get_drinkers(){\n    return this.http.get<any[]>('/api/drinker');\n }\n\n post_hello(test:string){\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n  \n  return this.http.post<Derp>('/api/mod',{\n      key: test\n  },httpOptions);\n}\n\nmake_qry(qry:string){\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n  \n  return this.http.post<accept>('/api/mod/exeqry', {query: qry} ,httpOptions);\n}\n\nmake_qry_j(qry:string){\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n  \n  return this.http.post<any[]>('/api/mod/exeqryj', {query: qry} ,httpOptions);\n}\n\nget_city(){\n  return this.http.get<any[]>('/api/city');\n}\n\nget_freq(){\n  return this.http.get<any[]>('/api/freq');\n}\n\nget_include(){\n  return this.http.get<any[]>('/api/include');\n}\n\nget_like(){\n  return this.http.get<any[]>('/api/likes');\n}\n\nget_loc(){\n  return this.http.get<any[]>('/api/locate');\n}\nget_make(){\n  return this.http.get<any[]>('/api/make');\n}\nget_sell(){\n  return this.http.get<any[]>('/api/sells');\n}\nget_trans(){\n  return this.http.get<any[]>('/api/trans');\n}\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlcy1wYWdlL3Jlcy1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Verify query on our Tables!</h1>\\n      \\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n\\n  <div class=\\\"container\\\">\\n\\n      \\n      <fieldset>\\n          <legend>Please Enter MySql command to query this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n          Requirement1: \\n          Transactions/bills cannot be issued at times when the given bar is closed\\n      </h2>\\n      <textarea #queryBox1 type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\"  [(ngModel)]=\\\"inputQuery1\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"val(queryBox1.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery1=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\\n      <fieldset>\\n          <legend>Please Enter MySql command to query this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n          Requirement2:\\n          Drinkers cannot frequent bars in different state\\n      </h2>\\n      <textarea #queryBox2 type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery2\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"val(queryBox2.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery2=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\\n      <fieldset>\\n          <legend>Please Enter MySql command to query this table:</legend>\\n      <h4 class = \\\"font-weight-light\\\">\\n          Requirement3: \\n          For every two beers, b1 and b2, different bars may charge differently for b1 and b2 but b1 should either be less expensive than b2 in ALL bars or more expensive than b2 in ALL bars.  Cannot be the case that in one bar Corona is more expensive than Bud and in another Bud is more expensive than Corona.  But Corona may be more expensive than Bud in one bar,  and have the same price as Bud in another.\\n      </h4>\\n      <textarea #queryBox3 type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery3\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"val(queryBox3.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery3=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\\n      </div>\\n\\n\\n      \"","import { Component, OnInit } from '@angular/core';\nimport { ModservService, accept } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-res-page',\n  templateUrl: './res-page.component.html',\n  styleUrls: ['./res-page.component.css']\n})\nexport class ResPageComponent implements OnInit {\n\n  datas : any[]\n  resp : accept;\n\n  resstr:string;\n  inputQuery2 = \"select not exists(\\\n    select m.TransID, m.Time, b.Open_Time, b.Close_Time \\\n    from Make m, \\\n    (select Name, Open_Time, \\\n    (if (time(Close_Time) >= time(\\\"00:00\\\") and time(Close_Time) < time(\\\"08:00\\\"), addtime(Close_Time, \\\"24:00\\\"), (Close_Time))) as Close_Time \\\n    from Bar) as b \\\n    where \\\n    (if (time(m.Time) >= time(\\\"00:00\\\") and time(m.Time) < time(\\\"06:00\\\"), addtime(m.Time, \\\"24:00\\\"), (m.Time))) and \\\n    (time(m.Time) < time(b.Open_Time) or time(m.Time) >  time(b.Close_Time)) and \\\n    m.BarName = b.Name \\\n    )\"\n  inputQuery1 = \"select not exist (select * from \\\n  (Make M left join Locate L on M.BarName = L.Bar)\\\n  left join Drinker D on D.Name = M.DrinkerName\\\n  where L.State <> D.State)\"\n\n  inputQuery3 = \"select not exists(\\\n    select * from \\\n    (Sells S1 left join Item I1 on I1.Item = S1.Item) \\\n    left join (Sells S2 left join Item I2 on I2.Item = S2.Item)  on S1.Bar = S2.Bar \\\n    where S1.Price > S2.Price and \\\n    I1.Index < I2.Index)\"\n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n  ){\n\n  }\n  ngOnInit() {\n  }\n  val(str:string){\n    alert(\"return value :1\")\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NxbC1wYWdlL3NxbC1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Constumize your query on our Table!</h1>\\n      <p class=\\\"lead\\\">Extra criedit</p>\\n      \\n    </div>\\n  </div>\\n  <br>\\n\\n\\n  <div class=\\\"container\\\">\\n      \\n      <fieldset>\\n          <legend>Please Enter MySql command to query this table:</legend>\\n      <h2 class = \\\"font-weight-light\\\">\\n        Query:\\n      </h2>\\n      <textarea #queryBox type=\\\"text\\\" cols = \\\"100\\\" rows=\\\"4\\\" [(ngModel)]=\\\"inputQuery\\\" required autoResize = \\\"autoResize\\\">\\n        </textarea>\\n      <br>\\n    \\n      <button (click)=\\\"exe_sql_j(queryBox.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <button (click)=\\\"inputQuery=''\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n      </fieldset>\\n\\n\\n      <div class=\\\"container\\\">\\n\\n          <pre id=\\\"json\\\"></pre>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ModservService, accept } from '../modserv.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-sql-page',\n  templateUrl: './sql-page.component.html',\n  styleUrls: ['./sql-page.component.css']\n})\nexport class SqlPageComponent implements OnInit {\n\n  datas : any[]\n  resp : accept;\n\n  resstr:string;\n  inputQuery = \"select * from Bar\"\n  constructor( \n    private modservService: ModservService,\n    private route: ActivatedRoute,\n  \n  ) { }\n\n  ngOnInit() {\n  }\n\n  exe_sql_j(qry: string){\n    console.log(qry)\n    this.modservService\n    .make_qry_j(qry)\n    .subscribe(\n      data => {\n        this.datas = data\n        //this.resstr = this.datas.accept.toString();\n        this.resstr = JSON.stringify(this.datas, null, 2)\n        document.getElementById(\"json\").innerHTML = this.resstr\n        console.log(this.resstr);\n\n        \n      },\n      (error: HttpResponse<any>) => {\n        if (error.status === 404) {\n          alert('Bar not found');\n        } else {\n          console.error(error.status + ' - ' + error.body);\n          alert('An error occurred on the server. Please check the browser console.');\n        }\n      }\n  \n    )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9uL3RyYW5zYWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">Transactions {{tranID}}</h2>\\n    <p-table [value]=\\\"translist\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Bar </th>\\n          <th>Date</th>\\n          <th>Drinker </th>\\n          <th>Item</th>\\n          <th>Price </th>\\n          <th>Quantity</th>\\n          <th>Time</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-tran>\\n        <tr>\\n          <td>{{ tran.BarName }}</td>\\n          <td>{{ tran.Date }}</td>\\n          <td>{{ tran.DrinkerName }}</td>\\n          <td>{{ tran.Item }}</td>\\n          <td>{{ tran.Price}}</td>\\n          <td>{{ tran.Quantity }}</td>\\n          <td>{{ tran.Time }}</td>\\n        \\n        </tr>\\n      </ng-template>\\n    </p-table>\\n    <br><br>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DrinkersService, drinker_bar_trans, trans_detail } from '../drinkers.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  tranID : string\n  translist : trans_detail[]\n\n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.tranID = paramMap.get('transid');\n      this.drinkersService\n    .trans_detail(this.tranID)\n    .subscribe(\n      data => {\n        this.translist = data\n        \n      }\n    )\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n/*\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DrinkersService, drinker_bar_trans } from '../drinkers.service';\n\n@Component({\n  selector: 'app-drinkersbar-details',\n  templateUrl: './drinkersbar-details.component.html',\n  styleUrls: ['./drinkersbar-details.component.css']\n})\nexport class DrinkersbarDetailsComponent implements OnInit {\n\n  drinkerName : string; \n  barName :string;\n\n  trans : drinker_bar_trans[]\n  \n  constructor(\n    private drinkersService: DrinkersService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n      this.barName = paramMap.get('bar');\n      \n    });\n\n    //TODO: this line\n    this.drinkersService.drinker_bar_trans(this.drinkerName,this.barName).subscribe(\n      data => {\n        this.trans= data;\n      }\n    )\n  }\n  ngOnInit() {\n  }\n\n}\n*/","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Welcome to our Bar Beer Drinker!</h1>\\n    <p class=\\\"lead\\\">Spying on all bars, beers and drinkers across the planet.</p>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"container\\\">\\n   <p-table [value]=\\\"bars\\\">\\n    <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Open time</th>\\n          <th>Close time</th>\\n          \\n        </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td>\\n            <a routerLink = \\\"/bars/{{ bar.Name }}\\\">\\n              {{ bar.Name }}\\n            </a>\\n          </td>\\n          <td>{{ bar.Open_Time }}</td>\\n          <td>{{ bar.Close_Time }}</td>\\n          \\n        </tr>\\n    </ng-template>\\n  </p-table>\\n  \\n</div>\\n\\n\\n<br><br>\"","import { Component, OnInit } from '@angular/core';\nimport {BarsService,Bar} from '../bars.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  bars: Bar[];\n\n  constructor(\n    public barService: BarsService\n  ) {\n    this.getBars();\n  }\n\n  ngOnInit() {\n  }\n\n  getBars() {\n    this.barService.getBars().subscribe(\n      data => {\n        this.bars = data;\n      },\n      error => {\n        alert('Could not retrieve a list of bars');\n      }\n     \n    );\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}